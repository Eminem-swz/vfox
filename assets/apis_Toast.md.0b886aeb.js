import{o as t,c as d,a}from"./app.28c4bf22.js";const e='{"title":"Toast 消息类型弹窗","description":"","frontmatter":{},"headers":[{"level":2,"title":"Toast.showToast(object)","slug":"toast-showtoast-object"},{"level":3,"title":"Params","slug":"params"},{"level":3,"title":"Usage","slug":"usage"},{"level":2,"title":"Toast.hideToast([object])","slug":"toast-hidetoast-object"},{"level":3,"title":"Params","slug":"params-1"},{"level":3,"title":"Usage","slug":"usage-1"},{"level":2,"title":"Toast.showLoading(object)","slug":"toast-showloading-object"},{"level":3,"title":"Params","slug":"params-2"},{"level":3,"title":"Usage","slug":"usage-2"},{"level":2,"title":"Toast.hideLoading([object])","slug":"toast-hideloading-object"},{"level":3,"title":"Params","slug":"params-3"},{"level":3,"title":"Usage","slug":"usage-3"}],"relativePath":"apis/Toast.md","lastUpdated":1624583539153}',o={},s=a('<h1 id="toast-消息类型弹窗"><a class="header-anchor" href="#toast-消息类型弹窗" aria-hidden="true">#</a> Toast 消息类型弹窗</h1><p>注：目前仅支持单例模式。</p><h2 id="toast-showtoast-object"><a class="header-anchor" href="#toast-showtoast-object" aria-hidden="true">#</a> Toast.showToast(object)</h2><p>显示消息提示框。</p><h3 id="params"><a class="header-anchor" href="#params" aria-hidden="true">#</a> Params</h3><p>Object object</p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>string</td><td></td><td>是</td><td>提示的内容</td></tr><tr><td>type</td><td>string</td><td>&#39;default&#39;</td><td>否</td><td>类型，可选 &#39;success&#39;, &#39;loading&#39;, &#39;fail&#39;</td></tr><tr><td>icon</td><td>string</td><td></td><td>否</td><td>图标，使用 <a href="./../components/Icon.html">Icon</a> 组件，优先级高于 <code>type</code></td></tr><tr><td>duration</td><td>number</td><td>1500</td><td>否</td><td>提示的延迟关闭时间</td></tr><tr><td>mask</td><td>boolean</td><td>false</td><td>否</td><td>是否显示透明蒙层，防止触摸穿透</td></tr><tr><td>success</td><td>function</td><td></td><td>否</td><td>接口调用成功的回调函数</td></tr><tr><td>fail</td><td>function</td><td></td><td>否</td><td>接口调用失败的回调函数（不传入 fail 遇错误直接抛出）</td></tr><tr><td>complete</td><td>function</td><td></td><td>否</td><td>接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h4 id="object-type-的合法值"><a class="header-anchor" href="#object-type-的合法值" aria-hidden="true">#</a> object.type 的合法值</h4><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>不显示图标，此时 title 文本最多可显示两行</td></tr><tr><td>success</td><td>显示成功图标，此时 title 文本最多显示 7 个汉字长度</td></tr><tr><td>loading</td><td>显示加载图标，此时 title 文本最多显示 7 个汉字长度</td></tr><tr><td>fail</td><td>显示错误图标，此时 title 文本最多显示 7 个汉字长度</td></tr></tbody></table><h3 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h3><div class="language-"><pre><code>import { Toast } from &#39;vfox&#39;\n\nToast.showToast({\n  title: &#39;成功&#39;,\n  type: &#39;success&#39;,\n  duration: 2000\n})\n</code></pre></div><h2 id="toast-hidetoast-object"><a class="header-anchor" href="#toast-hidetoast-object" aria-hidden="true">#</a> Toast.hideToast([object])</h2><p>隐藏消息提示框。</p><h3 id="params-1"><a class="header-anchor" href="#params-1" aria-hidden="true">#</a> Params</h3><p>Object object</p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>success</td><td>function</td><td></td><td>否</td><td>接口调用成功的回调函数</td></tr><tr><td>fail</td><td>function</td><td></td><td>否</td><td>接口调用失败的回调函数</td></tr><tr><td>complete</td><td>function</td><td></td><td>否</td><td>接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h3 id="usage-1"><a class="header-anchor" href="#usage-1" aria-hidden="true">#</a> Usage</h3><div class="language-"><pre><code>import { Toast } from &#39;vfox&#39;\n\nToast.hideToast()\n</code></pre></div><h2 id="toast-showloading-object"><a class="header-anchor" href="#toast-showloading-object" aria-hidden="true">#</a> Toast.showLoading(object)</h2><p>显示 loading 提示框。需主动调用 <a href="./Toast.html#toast-hideloading-object">hideLoading</a> 才能关闭提示框。</p><h3 id="params-2"><a class="header-anchor" href="#params-2" aria-hidden="true">#</a> Params</h3><p>Object object</p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>string</td><td></td><td>是</td><td>提示的内容</td></tr><tr><td>mask</td><td>boolean</td><td>false</td><td>否</td><td>是否显示透明蒙层，防止触摸穿透</td></tr><tr><td>success</td><td>function</td><td></td><td>否</td><td>接口调用成功的回调函数</td></tr><tr><td>fail</td><td>function</td><td></td><td>否</td><td>接口调用失败的回调函数</td></tr><tr><td>complete</td><td>function</td><td></td><td>否</td><td>接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h3 id="usage-2"><a class="header-anchor" href="#usage-2" aria-hidden="true">#</a> Usage</h3><div class="language-"><pre><code>import { Toast } from &#39;vfox&#39;\n\nToast.showLoading({\n  title: &#39;加载中&#39;,\n})\n</code></pre></div><h2 id="toast-hideloading-object"><a class="header-anchor" href="#toast-hideloading-object" aria-hidden="true">#</a> Toast.hideLoading([object])</h2><p>隐藏 loading 提示框。</p><h3 id="params-3"><a class="header-anchor" href="#params-3" aria-hidden="true">#</a> Params</h3><p>Object object</p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>success</td><td>function</td><td></td><td>否</td><td>接口调用成功的回调函数</td></tr><tr><td>fail</td><td>function</td><td></td><td>否</td><td>接口调用失败的回调函数</td></tr><tr><td>complete</td><td>function</td><td></td><td>否</td><td>接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h3 id="usage-3"><a class="header-anchor" href="#usage-3" aria-hidden="true">#</a> Usage</h3><div class="language-"><pre><code>import { Toast } from &#39;vfox&#39;\n\nToast.hideLoading()\n</code></pre></div>',32);o.render=function(a,e,o,r,h,i){return t(),d("div",null,[s])};export default o;export{e as __pageData};
