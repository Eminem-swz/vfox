import{o as t,c as e,a as d}from"./app.2bd60a78.js";const a='{"title":"FlatList 回收列表","description":"","frontmatter":{},"headers":[{"level":2,"title":"Props","slug":"props"},{"level":2,"title":"Events","slug":"events"},{"level":3,"title":"recycle-change 的参数","slug":"recycle-change-的参数"},{"level":2,"title":"Slots","slug":"slots"},{"level":3,"title":"列表项（#default）","slug":"列表项（-default）"},{"level":3,"title":"列表为空（#empty）","slug":"列表为空（-empty）"},{"level":3,"title":"分割线（#separator）","slug":"分割线（-separator）"},{"level":3,"title":"前置（#header）","slug":"前置（-header）"},{"level":3,"title":"后置（#footer）","slug":"后置（-footer）"},{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"scrollToIndex 的参数","slug":"scrolltoindex-的参数"}],"relativePath":"components/FlatList.md","lastUpdated":1624584443320}',r={},l=d('<h1 id="flatlist-回收列表"><a class="header-anchor" href="#flatlist-回收列表" aria-hidden="true">#</a> FlatList 回收列表</h1><p>注：</p><ul><li>需要给 <code>flat-list</code> 一个固定高度，通过 CSS 设置 height。</li><li>如果列表内容存在不固定宽高的图片，由于图片加载的机制，每个 item 的 DOM 渲染了，图片可能还未加载，导致每个 item 的位置计算错误，所以作为调用方，需要将未加载的图片用样式固定住。在已知宽高比（比如常见的正方形商品图），可以使用 <code>Image</code> 组件内置 <code>aspect-ratio</code> 来固定图片宽高。</li></ul><h2 id="props"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>data</td><td>any[]</td><td></td><td>是</td><td>列表数组</td></tr><tr><td>data-key</td><td>string</td><td></td><td>否</td><td>表明每个 item 项的身份（item[dataKey]），如果想指向自己，则设置为 <code>*this</code> 。建议填写，不填默认使用 index 作为身份标识</td></tr><tr><td>horizontal</td><td>boolean</td><td>false</td><td>否</td><td>设置为 true 则变为水平布局模式</td></tr><tr><td>get-item-size</td><td>Function</td><td></td><td>否</td><td>动态返回列表项尺寸（垂直布局下指高度，水平布局下指宽度），<code>getItemSize(item:any, index:number) =&gt; number</code>，item 是 data[index] 的副本</td></tr><tr><td>item-size</td><td>number</td><td></td><td>否</td><td>设置列表项尺寸，优先使用 <code>get-item-size</code></td></tr><tr><td>end-reached-threshold</td><td>number</td><td>0.5</td><td>否</td><td>决定当距离内容最底部还有多远时触发 onEndReached 回调。注意此参数是一个比值而非像素单位。比如，0.5 表示距离内容最底部的距离为当前列表可见长度的一半时触发</td></tr><tr><td>enable-pull-refresh</td><td>boolean</td><td>false</td><td>否</td><td>是否开启下拉刷，如果时水平列表则为左拉刷新，搭配 <code>refreshing</code> 事件使用新</td></tr><tr><td>lower-loading</td><td>boolean</td><td>false</td><td>否</td><td>是否展示底部加载更多状态，配合 <code>end-reached</code> 事件加载无无限列表</td></tr><tr><td>initial-waterfall</td><td>boolean</td><td>false</td><td>否</td><td>是否开启瀑布流展示方，仅初始化时生效式</td></tr><tr><td>waterfall-col-count</td><td>number</td><td>2</td><td>否</td><td>瀑布流列数，<code>initial-waterfall=true</code> 时生效，支持 2 ~ 5 列</td></tr><tr><td>item-gutter</td><td>number/number[]</td><td>false</td><td>否</td><td>项间隔，通过数值设置水平和垂直间隔，也可以通过数组的形式分别设置水平和垂直间隔 [水平间隔, 垂直间隔]，<code>getItemSize</code> 或者 <code>itemSize</code> 设定值需要把 <code>item-gutter</code> 考虑进去</td></tr></tbody></table><h2 id="events"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><table><thead><tr><th>事件</th><th>描述</th><th>回调函数参数</th></tr></thead><tbody><tr><td>recycle-change</td><td>列表项回收变化时触发</td><td>{ item, index, recycled }</td></tr><tr><td>end-reached</td><td>滚动到末尾时触发</td><td>{ distanceFromEnd } 其中 distanceFromEnd 为距离末尾的距离，单位 px</td></tr><tr><td>scroll</td><td>滚动时触发</td><td>{ scrollLeft, scrollTop, scrollHeight, scrollWidth }</td></tr><tr><td>refreshing</td><td>下拉刷新时触发</td><td>({ pullDirection: string }, done: Function) 其中 pullDirection 指下拉的方向，done 指刷新完毕回调的函数</td></tr></tbody></table><h3 id="recycle-change-的参数"><a class="header-anchor" href="#recycle-change-的参数" aria-hidden="true">#</a> recycle-change 的参数</h3><table><thead><tr><th>值</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>recycled</td><td>boolean</td><td>是否被回收</td></tr><tr><td>index</td><td>number</td><td>第 index 项</td></tr><tr><td>item</td><td>any</td><td>传入 data[index]的副本，修改不会影响 prop data</td></tr></tbody></table><h2 id="slots"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h2><h3 id="列表项（-default）"><a class="header-anchor" href="#列表项（-default）" aria-hidden="true">#</a> 列表项（#default）</h3><div class="language-"><pre><code>&lt;fx-flat-list&gt;\n &lt;template #default=&quot;{ item, index }&quot;&gt;\n  {{ index }} : {{ item }}\n &lt;/template&gt;\n&lt;/fx-flat-list&gt;\n</code></pre></div><h3 id="列表为空（-empty）"><a class="header-anchor" href="#列表为空（-empty）" aria-hidden="true">#</a> 列表为空（#empty）</h3><div class="language-"><pre><code>&lt;fx-flat-list&gt;\n  &lt;template #empty&gt;暂无数据&lt;/template&gt;\n  ...\n&lt;/fx-flat-list&gt;\n</code></pre></div><h3 id="分割线（-separator）"><a class="header-anchor" href="#分割线（-separator）" aria-hidden="true">#</a> 分割线（#separator）</h3><div class="language-"><pre><code>&lt;fx-flat-list&gt;\n  &lt;template #separator&gt;\n    &lt;div class=&quot;line&quot;&gt;&lt;/div&gt;\n  &lt;/template&gt;\n&lt;/fx-flat-list&gt;\n</code></pre></div><p>注：<code>getItemSize</code> 或者 <code>itemSize</code> 设定值需要把分割线也考虑进去。</p><h3 id="前置（-header）"><a class="header-anchor" href="#前置（-header）" aria-hidden="true">#</a> 前置（#header）</h3><div class="language-"><pre><code>&lt;fx-flat-list&gt;\n  &lt;template #header&gt;&lt;/template&gt;\n  ...\n&lt;/fx-flat-list&gt;\n</code></pre></div><p>也可以传入 <a href="./Icon.html">Icon</a>，比如常见的搜索。</p><h3 id="后置（-footer）"><a class="header-anchor" href="#后置（-footer）" aria-hidden="true">#</a> 后置（#footer）</h3><div class="language-"><pre><code>&lt;fx-flat-list&gt;\n  ...\n  &lt;template #footer&gt;暂时没有更多了&lt;/template&gt;\n&lt;/fx-flat-list&gt;\n</code></pre></div><h2 id="methods"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>scrollToIndex</td><td>将位于指定位置的元素滚动到可视区的指定位置</td><td>({ index: number, animated: boolean, viewPosition: string }) =&gt; void</td></tr><tr><td>scrollToOffset</td><td>滚动列表到指定的偏移，单位 px</td><td>({ offset: number, animated: boolean }) =&gt; void</td></tr><tr><td>scrollToEnd</td><td>滚动到底部</td><td>({ animated: boolean }) =&gt; void</td></tr><tr><td>recordInteraction</td><td>主动通知列表发生了一个事件，以使列表重新计算可视区域</td><td>() =&gt; void</td></tr></tbody></table><h3 id="scrolltoindex-的参数"><a class="header-anchor" href="#scrolltoindex-的参数" aria-hidden="true">#</a> scrollToIndex 的参数</h3><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>index</td><td>number</td><td></td><td>是</td><td>列表第 <code>index</code> 项滚动到可视区的指定位置</td></tr><tr><td>animated</td><td>boolean</td><td>true</td><td>否</td><td>滚动过程中是否使用过度动画</td></tr><tr><td>viewPosition</td><td>string</td><td>&#39;start&#39;</td><td>否</td><td>&#39;start&#39;/&#39;center&#39;/&#39;end&#39;/0/0.5/1 显示在屏幕的头部/中间/末尾位置</td></tr></tbody></table>',26);r.render=function(d,a,r,o,i,h){return t(),e("div",null,[l])};export default r;export{a as __pageData};
