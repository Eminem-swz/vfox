import{o as t,c as e,a as r}from"./app.28c4bf22.js";const d='{"title":"Form 表单","description":"","frontmatter":{},"headers":[{"level":2,"title":"Form Props","slug":"form-props"},{"level":3,"title":"rules 结构","slug":"rules-结构"},{"level":2,"title":"Form Events","slug":"form-events"},{"level":3,"title":"回调参数 value 的结构","slug":"回调参数-value-的结构"},{"level":2,"title":"Form Slots","slug":"form-slots"},{"level":2,"title":"FormItem 表单项","slug":"formitem-表单项"},{"level":2,"title":"FormItem Props","slug":"formitem-props"},{"level":3,"title":"rules 结构","slug":"rules-结构-1"}],"relativePath":"components/Form.md","lastUpdated":1624583539153}',a={},l=r('<h1 id="form-表单"><a class="header-anchor" href="#form-表单" aria-hidden="true">#</a> Form 表单</h1><ul><li><p>当点击 <code>Form</code> 中 form-type 为 submit 的 <a href="./Button.html">Button</a> 组件时，会将表单组件中的 value 值进行提交，需要在表单组件中加上 name 来作为 key。</p></li><li><p>配合 <a href="./Form.html#formitem-表单项">FormItem</a> 组件可以完成一套带校验的表单。</p></li></ul><h2 id="form-props"><a class="header-anchor" href="#form-props" aria-hidden="true">#</a> Form Props</h2><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>rules</td><td>Object</td><td></td><td>否</td><td>表单验证规则</td></tr></tbody></table><h3 id="rules-结构"><a class="header-anchor" href="#rules-结构" aria-hidden="true">#</a> rules 结构</h3><div class="language-"><pre><code>{\n  nickname: [\n    { required: true, message: &#39;请输入昵称&#39;, trigger: &#39;blur&#39; },\n    { min: 3, max: 5, message: &#39;长度在 3 到 5 个字符&#39;, trigger: &#39;blur&#39; }\n  ],\n  agreement: [\n    {\n      validator(rule, value, callback) {\n        if (value === true) {\n          callback()\n        } else {\n          callback(new Error(&#39;你必须同意该协议&#39;))\n        }\n      }\n    }\n  ]\n}\n</code></pre></div><blockquote><p>自定义校验 callback 必须被调用。 更多高级用法可参考 <a href="https://github.com/yiminghe/async-validator" target="_blank" rel="noopener noreferrer">async-validator</a>。</p></blockquote><h2 id="form-events"><a class="header-anchor" href="#form-events" aria-hidden="true">#</a> Form Events</h2><table><thead><tr><th>事件</th><th>描述</th><th>回调函数参数</th></tr></thead><tbody><tr><td>submit</td><td>携带 form 中的数据触发 submit 事件</td><td>{ value : {&#39;name&#39;: &#39;value&#39;} }</td></tr><tr><td>reset</td><td>表单重置时会触发 reset 事件</td><td>{}</td></tr><tr><td>validate-submit</td><td>有检验情况下，表单 submit 触发时</td><td>{ valid: true, value : {&#39;name&#39;: &#39;value&#39;}</td></tr></tbody></table><h3 id="回调参数-value-的结构"><a class="header-anchor" href="#回调参数-value-的结构" aria-hidden="true">#</a> 回调参数 value 的结构</h3><p>该数据汇集了所有设置 name 的表单标签数据（含原生标签），部分数据类型是 Array，如：<code>checbox</code>，<code>select multiple</code>等</p><h2 id="form-slots"><a class="header-anchor" href="#form-slots" aria-hidden="true">#</a> Form Slots</h2><div class="language-"><pre><code>&lt;fx-form&gt;\n  ...\n  &lt;fx-input type=&quot;text&quot; /&gt;\n  &lt;fx-button form-type=&quot;submit&quot;&gt;提交&lt;/fx-button&gt;\n&lt;/fx-form&gt;\n</code></pre></div><h2 id="formitem-表单项"><a class="header-anchor" href="#formitem-表单项" aria-hidden="true">#</a> FormItem 表单项</h2><h2 id="formitem-props"><a class="header-anchor" href="#formitem-props" aria-hidden="true">#</a> FormItem Props</h2><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>name</td><td>string</td><td></td><td>是</td><td>为子表单组件设置相应的<code>name</code>值</td></tr><tr><td>rules</td><td>Object</td><td></td><td>否</td><td>独立表单验证规则，如果没有设置，则根据<code>name</code>的值去外层<code>form</code>组件查找相应的规则</td></tr><tr><td>label</td><td>string</td><td></td><td>否</td><td>设置该行名称，比如 <code>昵称</code></td></tr><tr><td>required</td><td>boolean</td><td>false</td><td>否</td><td>是否必填，设置 <code>true</code> 后 label 会展示必填<code>*</code>，在找不到自定义规则的情况下，会默认加入 1 条必填规则</td></tr></tbody></table><h3 id="rules-结构-1"><a class="header-anchor" href="#rules-结构-1" aria-hidden="true">#</a> rules 结构</h3><div class="language-"><pre><code>[\n  { required: true, message: &#39;请输入昵称&#39;, trigger: &#39;blur&#39; },\n  { min: 3, max: 5, message: &#39;长度在 3 到 5 个字符&#39;, trigger: &#39;blur&#39; }\n]\n</code></pre></div>',18);a.render=function(r,d,a,o,s,h){return t(),e("div",null,[l])};export default a;export{d as __pageData};
