import{o as e,c as a,a as i}from"./app.2bd60a78.js";const l='{"title":"指南","description":"","frontmatter":{"sidebarDepth":2},"headers":[{"level":2,"title":"介紹","slug":"介紹"},{"level":3,"title":"特性","slug":"特性"},{"level":3,"title":"附言","slug":"附言"},{"level":2,"title":"安装","slug":"安装"},{"level":3,"title":"NPM","slug":"npm"},{"level":2,"title":"引入","slug":"引入"},{"level":3,"title":"全组件引入","slug":"全组件引入"},{"level":3,"title":"自动按需引入组件","slug":"自动按需引入组件"},{"level":3,"title":"手动按需引入组件","slug":"手动按需引入组件"},{"level":3,"title":"API调用","slug":"api调用"},{"level":2,"title":"主题定制","slug":"主题定制"},{"level":2,"title":"从 v1（基于 Vue2）版本升级","slug":"从-v1（基于-vue2）版本升级"},{"level":3,"title":"升级 Vue 3","slug":"升级-vue-3"},{"level":3,"title":"不兼容更新","slug":"不兼容更新"}],"relativePath":"index.md","lastUpdated":1624584443324}',o={},r=i('<h1 id="指南"><a class="header-anchor" href="#指南" aria-hidden="true">#</a> 指南</h1><h2 id="介紹"><a class="header-anchor" href="#介紹" aria-hidden="true">#</a> 介紹</h2><p>移动端 Vue 3.x 组件库。</p><h3 id="特性"><a class="header-anchor" href="#特性" aria-hidden="true">#</a> 特性</h3><ul><li>提供 100+ 组件，覆盖移动端各类场景</li><li>单元测试覆盖</li><li>支持 Vue 2 和 Vue 3</li><li>支持按需引入</li></ul><h3 id="附言"><a class="header-anchor" href="#附言" aria-hidden="true">#</a> 附言</h3><p>该版本已使用 <code>Composition API</code> 和 <code>Typescript</code> 重构。</p><h2 id="安装"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><h3 id="npm"><a class="header-anchor" href="#npm" aria-hidden="true">#</a> NPM</h3><div class="language-"><pre><code>npm i -S vfox@beta\n</code></pre></div><h2 id="引入"><a class="header-anchor" href="#引入" aria-hidden="true">#</a> 引入</h2><h3 id="全组件引入"><a class="header-anchor" href="#全组件引入" aria-hidden="true">#</a> 全组件引入</h3><div class="language-"><pre><code>import Vfox from &#39;vfox&#39;\nimport &#39;vfox/es/style/index.css&#39;\n\napp.use(Vfox)\n</code></pre></div><h3 id="自动按需引入组件"><a class="header-anchor" href="#自动按需引入组件" aria-hidden="true">#</a> 自动按需引入组件</h3><p>使用 ant 团队提供的 <a href="https://github.com/ant-design/babel-plugin-import" target="_blank" rel="noopener noreferrer">babel-plugin-import</a> babel 插件，它会在编译过程中将 import 的写法自动转换为按需引入的方式。</p><div class="language-"><pre><code>npm i babel-plugin-import -D\n</code></pre></div><p>在 <code>babel.config.js</code> 中配置：</p><div class="language-"><pre><code>module.exports = {\n  ...\n  plugins: [\n    [\n      &quot;import&quot;,\n      {\n        libraryName: &quot;vfox&quot;,\n        libraryDirectory: &quot;es&quot;,\n        style: true,\n        camel2DashComponentName: false\n      },\n      &quot;vfox&quot;\n    ]\n  ]\n}\n</code></pre></div><p>在业务代码中引入 <code>Vfox</code> 组件：</p><div class="language-"><pre><code>import { Button } from &#39;vfox&#39;\n\napp.use(Button)\n</code></pre></div><h3 id="手动按需引入组件"><a class="header-anchor" href="#手动按需引入组件" aria-hidden="true">#</a> 手动按需引入组件</h3><p>在不使用插件的情况下，可以手动引入需要的组件。</p><div class="language-"><pre><code>import { Button } from &#39;vfox/es/Button&#39;\nimport &#39;vfox/src/Button/style&#39;\n\napp.use(Button)\n</code></pre></div><h3 id="api调用"><a class="header-anchor" href="#api调用" aria-hidden="true">#</a> API调用</h3><div class="language-"><pre><code>import { Toast } from &#39;vfox&#39;\n\nexport default {\n  mounted() {\n    Toast.showToast({\n      title: &#39;成功&#39;,\n      type: &#39;success&#39;,\n      duration: 2000\n    })\n  }\n}\n</code></pre></div><h2 id="主题定制"><a class="header-anchor" href="#主题定制" aria-hidden="true">#</a> 主题定制</h2><p>Vfox 的样式是基于 SCSS 开发的，定义了一套默认样式变量，变量可参考 <a href="https://github.com/godxiaoji/vfox/blob/beta/src/style/var.scss" target="_blank" rel="noopener noreferrer">var.scss</a>。</p><ol><li>新建自定义 SCSS 文件 <code>my-var.scss</code>，定义一些变量，如：</li></ol><div class="language-"><pre><code>$primary-color: #ff0000;\n$warning: #ffff00;\n...\n</code></pre></div><ol start="2"><li>新建要入口 SCSS 文件 <code>my-style.scss</code>，引入自定义变量文件和默认主题文件。</li></ol><div class="language-"><pre><code>@import &#39;path/to/my-var.scss&#39;;\n@import &#39;vfox/src/style/index.scss&#39;;\n</code></pre></div><ol start="3"><li>更改原来引入的样式文件</li></ol><p><code>import &#39;vfox/es/style/index.css&#39;</code> =&gt; <code>import &#39;path/to/my-style.scss&#39;</code></p><h2 id="从-v1（基于-vue2）版本升级"><a class="header-anchor" href="#从-v1（基于-vue2）版本升级" aria-hidden="true">#</a> 从 v1（基于 Vue2）版本升级</h2><h3 id="升级-vue-3"><a class="header-anchor" href="#升级-vue-3" aria-hidden="true">#</a> 升级 Vue 3</h3><p>升级问题请查看 <a href="https://v3.vuejs.org/guide/introduction.html" target="_blank" rel="noopener noreferrer">Vue3 文档</a>。</p><h3 id="不兼容更新"><a class="header-anchor" href="#不兼容更新" aria-hidden="true">#</a> 不兼容更新</h3><h4 id="弹窗组件-visible-字段变更"><a class="header-anchor" href="#弹窗组件-visible-字段变更" aria-hidden="true">#</a> 弹窗组件 visible 字段变更</h4><p>由原来的 <code>visible.sync</code> 变更为 <code>v-model:visible</code>，涉及组件：</p><ul><li>ActionSheet</li><li>CalendarPopup</li><li>Dialog</li><li>Drawer</li><li>Dropdown</li><li>ImagePreview</li><li>Modal</li><li>NoticeBar</li><li>Notify</li><li>PickerPopup</li><li>PopDialog</li><li>PopMenu</li><li>Popover</li><li>Toast</li></ul><h4 id="其他涉及-sync、v-model-字段的变更"><a class="header-anchor" href="#其他涉及-sync、v-model-字段的变更" aria-hidden="true">#</a> 其他涉及 .sync、v-model 字段的变更</h4><ul><li>Tab/TabBar 组件 <code>active-value.sync</code> -&gt; <code>v-model:active-value</code></li><li>Swiper/Sticky 组件 <code>active-index.sync</code> -&gt; <code>v-model:active-index</code></li><li>Radio/Checkbox 组件 <code>v-model</code> -&gt; <code>v-model:checked</code></li><li>ImagePreview 组件 <code>current.sync</code> -&gt; <code>v-model:current</code></li><li>Collapse 组件 <code>active-names.sync</code> -&gt; <code>v-model:active-names</code></li></ul>',42);o.render=function(i,l,o,d,t,n){return e(),a("div",null,[r])};export default o;export{l as __pageData};
